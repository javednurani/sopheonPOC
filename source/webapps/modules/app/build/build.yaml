name: $(SourceBranchName)-$(Date:yyyyMMdd).$(rev:rrr)

pool:
  name: Default

trigger:
  branches:
    exclude:
    - master
  paths:
    include:
    - source/webapps/modules/app

steps:
- powershell:
  targetType: 'filePath'
  filePath: DevOps/MachineCert.ps1
  displayName: 'Machine Cert'

- powershell: |
    Write-Host "License check in folder: $(System.DefaultWorkingDirectory)/source/webapps/packages/shell-api"
    node C:\Windows\ServiceProfiles\NetworkService\AppData\Roaming\npm\node_modules\license-checker\bin\license-checker --start "$(System.DefaultWorkingDirectory)/source/webapps/packages/shell-api" --out $(Build.ArtifactStagingDirectory)\shell_api_licenses.csv --csv --failOn 'GPL'
    
    Write-Host "License check in folder: $(System.DefaultWorkingDirectory)/source/webapps/packages/shared-ui"
    node C:\Windows\ServiceProfiles\NetworkService\AppData\Roaming\npm\node_modules\license-checker\bin\license-checker --start "$(System.DefaultWorkingDirectory)/source/webapps/packages/shared-ui" --out $(Build.ArtifactStagingDirectory)\shared_ui_licenses.csv --csv --failOn 'GPL'
    
    Write-Host "License check in folder: $(System.DefaultWorkingDirectory)/source/webapps/modules/app"
    node C:\Windows\ServiceProfiles\NetworkService\AppData\Roaming\npm\node_modules\license-checker\bin\license-checker --start "$(System.DefaultWorkingDirectory)/source/webapps/modules/app" --out $(Build.ArtifactStagingDirectory)\shell_app_licenses.csv --csv --failOn 'GPL'  
  displayName: 'License Checker - Packages and App'

- task: AzureCLI@2
  displayName: 'Azure CLI source/webapps/modules/app/build/Build.ps1'
  inputs:
    azureSubscription: 'Sopheon Dev'
    scriptType: ps
    scriptPath: source/webapps/modules/app/build/Build.ps1

- task: PublishTestResults@2
  displayName: 'Publish Test Results source/webapps/modules/app/junit.xml'
  inputs:
    testResultsFiles: source/webapps/modules/app/junit.xml
    failTaskOnFailedTests: true
  condition: succeededOrFailed()

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage from **/coverage/cobertura-coverage.xml'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '**/coverage/cobertura-coverage.xml'
  condition: succeededOrFailed()

- task: mspremier.BuildQualityChecks.QualityChecks-task.BuildQualityChecks@8
  displayName: 'Check build quality'
  inputs:
    checkCoverage: true
    coverageFailOption: fixed
    coverageType: lines
    treat0of0as100: true
  enabled: false

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: app'
  inputs:
    ArtifactName: App